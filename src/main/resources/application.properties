server.port=8002


com.ccbootdemo.name=cc
com.ccbootdemo.title=cc test
com.ccbootdemo.name2=cc2
com.ccbootdemo.title2=cc test2
# 随机字符串
com.ccbootdemo.blog.value=${random.value}
# 随机int
com.ccbootdemo.blog.number=${random.int}
# 随机long
com.ccbootdemo.blog.bignumber=${random.long}
# 10以内的随机数
com.ccbootdemo.blog.test1=${random.int(10)}
# 10-20的随机数
com.ccbootdemo.blog.test2=${random.int[10,20]}

#mapper不使用注解时必须配置 否则报错 dataSource加载失败 原因是加载顺序错乱
#报错信息 is not eligible for getting processed by all BeanPostProcessors
#        (for example: not eligible for auto-proxying)
#mybatis.mapper-locations=classpath:mapper/*.xml

# mybatis 通用mapper集成
#mybatis.type-aliases-package=com.cc.ccbootdemo.facade.domain.dataobject
#mybatis.mapper-locations=classpath:mapper/*.xml
# \u901A\u7528 Mapper \u914D\u7F6E
#mapper.mappers=com.cc.util.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL
# \u5206\u9875\u63D2\u4EF6\u914D\u7F6E
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
#spring.profiles.active=test
#spring.profiles.active=multiDB
#thymeleaf配置
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.check-template-location=true
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.content-type=text/html
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.cache=false

## Freemarker 配置
## 文件配置路径
#spring.freemarker.template-loader-path=classpath:/web/
#spring.freemarker.cache=false
#spring.freemarker.charset=UTF-8
#spring.freemarker.check-template-location=true
#spring.freemarker.content-type=text/html
#spring.freemarker.expose-request-attributes=true
#spring.freemarker.expose-session-attributes=true
#spring.freemarker.request-context-attribute=request
#spring.freemarker.suffix=.ftl

logging.config=classpath:logback-spring.xml
server.port=8002
spring.application.name=cc-group01

###producer
#该应用是否启用生产者
rocketmq.producer.isOnOff=on
#发送同一类消息的设置为同一个group，保证唯一,默认不需要设置，rocketmq会使用ip@pid(pid代表jvm名字)作为唯一标示
rocketmq.producer.groupName=${spring.application.name}
#mq的nameserver地址
rocketmq.producer.namesrvAddr=127.0.0.1:9876
#消息最大长度 默认1024*4(4M)
rocketmq.producer.maxMessageSize=4096
#发送消息超时时间,默认3000
rocketmq.producer.sendMsgTimeout=3000
#发送消息失败重试次数，默认2
rocketmq.producer.retryTimesWhenSendFailed=2

###consumer
##该应用是否启用消费者
rocketmq.consumer.isOnOff=on
rocketmq.consumer.groupName=${spring.application.name}
#mq的nameserver地址
rocketmq.consumer.namesrvAddr=127.0.0.1:9876
#该消费者订阅的主题和tags("*"号表示订阅该主题下所有的tags),格式：topic~tag1||tag2||tag3;topic2~*;
rocketmq.consumer.topics=DemoTopic~*;DemoTopic02~test-tag01||test-tag02;
rocketmq.consumer.consumeThreadMin=20
rocketmq.consumer.consumeThreadMax=64
#设置一次消费消息的条数，默认为1条
rocketmq.consumer.consumeMessageBatchMaxSize=1

